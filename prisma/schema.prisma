generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Entrenadores {
  id_entrenador Int        @id @default(autoincrement())
  picture       String
  nombre        String
  ci            String     @unique
  horario       String
  entrenados    Int
  telefono      String
  clientes      Clientes[]
}

model Clientes {
  id_ciente          Int           @id @default(autoincrement())
  nombre             String
  ci                 String        @unique
  horario            String
  fecha              DateTime
  numero_inscripcion Int
  id_entrenador      Int?
  plan               Boolean
  telefono           String?
  picture            String?
  estado             Boolean?
  entrenador         Entrenadores? @relation(fields: [id_entrenador], references: [id_entrenador], onUpdate: Cascade, onDelete: SetNull)
  payments           Payments[]
}

model User {
  id_user   Int      @id @default(autoincrement())
  nombre    String   @unique
  password  String
  rol       TipoRol?
  centro    Centro?  @relation(fields: [id_centro], references: [id], onUpdate: Cascade, onDelete: Cascade)
  id_centro Int?
}

enum TipoRol {
  Administrador
}

model Centro {
  id        Int    @id @default(autoincrement())
  nombre    String
  direccion String
  horario   String
  user      User[]
  shop      Shop[]
}

model Shop {
  id          Int    @id @default(autoincrement())
  picture     String
  nombre      String @unique
  compra      Decimal? // Precio de compra
  venta       Decimal // Precio de venta
  description String
  id_centro   Int

  // Relaciones
  stock       Stock?
  movimientos Movimiento[]
  centro      Centro      @relation(fields: [id_centro], references: [id], onUpdate: Cascade, onDelete: Cascade)
}

model Stock {
  id         Int   @id @default(autoincrement())
  producto   Shop  @relation(fields: [productoId], references: [id])
  productoId Int   @unique
  cantidad   Decimal
}

model Movimiento {
  id         Int            @id @default(autoincrement())
  tipo       MovimientoTipo
  cantidad   Decimal
  fecha      DateTime       @default(now())
  producto   Shop           @relation(fields: [productoId], references: [id])
  productoId Int
  nota       String?
}

enum MovimientoTipo {
  ENTRADA
  SALIDA
  AJUSTE
}

model Sales {
  id       Int      @id @default(autoincrement())
  fecha    DateTime
  producto String
  precio   Decimal
  cantidad Decimal
  total    Decimal
}

model Payments {
  id        Int       @id @default(autoincrement())
  cliente   Clientes? @relation(fields: [id_ciente], references: [id_ciente], onUpdate: Cascade, onDelete: SetNull)
  id_ciente Int?
  month     String
  amount    Decimal
}

model Price {
  id    Int      @id @default(autoincrement())
  date  DateTime
  price Decimal
}

model Reservation {
  id       Int      @id @default(autoincrement())
  fecha    DateTime
  nombre   String
  numero   String
  cantidad Int
  horario  String
  especial String?
}
